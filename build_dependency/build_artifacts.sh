#!/bin/bash

set -e 

source ${SCRIPTS_PATH}/build_dependency/install.sh
source ${SCRIPTS_PATH}/build_dependency/generate_dockerfile.sh
source ${SCRIPTS_PATH}/build_dependency/custom_build_script.sh
source ${SCRIPTS_PATH}/shared/utils.sh

function copy_jar_to_target(){
  target_dir="$(get_workspace_path)/target"
  if [ -d "$JAR_FOLDER" ]; then
    validate_variable "JAR_FOLDER"
    echo "Detected different jar file location ('/target' was expected). Adjusting copying jar file to target folder:${JAR_FOLDER}"
    mkdir -p $target_dir
    jar_folder_complete_path="$(get_workspace_path)/${JAR_FOLDER#/}"
    echo "Copy jar From : $jar_folder_complete_path to $target_dir"
    cp "$jar_folder_complete_path"/*.jar "$target_dir/"
  fi
}

function copy_dist_to_distribution(){
  source_dir="$(get_workspace_path)/dist"
  target_dir="$(get_workspace_path)/distribution"
  if [ -d "$DIST_FOLDER" ]; then
    validate_variable "DIST_FOLDER"
    echo "Detected different dist location ('/dist' was expected). Adjusting copying source files from :${DIST_FOLDER}"
    source_dir=${DIST_FOLDER}
  fi
  rm -rf $target_dir
  mkdir -p $target_dir
  echo "Copying From : $source_dir to $target_dir"
  cp -r "$source_dir"/* "$target_dir/"
}

# Function to build a Maven project JDK_VERSION & MAVEN_VERSION can be passed through env variables 
build_maven() {
  echo "Detected Maven project. Running mvn package..."
  install_maven_version
  install_jdk_version
  # Check if BUILD_SCRIPT is set
  if [ -n "$BUILD_SCRIPT" ]; then
    run_custom_build_script 
  else
    if [ -f "settings.xml" ]; then
        echo "Detected custom settings.xml, using customized settings for build"
        mvn install -gs settings.xml
    else
        mvn install
    fi
  fi
     
  # JDK version will be reconfigured in install.sh if its not configured
  validate_variable "JDK_VERSION"
  generate_dockerfile "java" ${JDK_VERSION}
  # Ensuring the the jar exists in actual /target path as autogenerated dockerfile requires it
  copy_jar_to_target
}

# Function to build an Angular project NODE_VERSION
build_angular() {
  echo "Detected Angular project. Installing Node.js version..."
  install_node_version
  install_angular_cli_version
  if [ -n "$BUILD_SCRIPT" ]; then
    run_custom_build_script 
  else
    echo "Running npm install..."
    npm install
    echo "Building the Angular project with ng build..."
    npx -p @angular/cli@$INSTALLED_ANGULAR_CLI_VERSION ng build
  fi
  copy_dist_to_distribution
}

# Function to build a Node.js project NODE_VERSION
build_node() {
  echo "Detected Node.js project. Installing Node.js version..."
  install_node_version
  if [ -n "$BUILD_SCRIPT" ]; then
    run_custom_build_script 
  else
    echo "Running npm install..."
    npm install
    echo "Building the Node.js project..."
    npm run build
  fi
  validate_variable "NODE_VERSION"
  generate_dockerfile "node" ${NODE_VERSION}
  copy_dist_to_distribution
}

#========================================================================================
# Main function to determine the project type and call the appropriate build function
cd_workspace

# Checking for build tools. For multiple tools passed in a same build needs this ( example, maven and npm ) to configure it - rare usecase
if [ -n "$NODE_VERSION" ]; then
    install_node_version
fi

if [ -n "$JDK_VERSION" ]; then
    install_jdk_version
fi

if [ -n "$MAVEN_VERSION" ]; then
    install_maven_version
fi

# Set the BUILD_TYPE variable to the desired build type, e.g., "maven", "angular", or "node" 
# Angular project can be also build using npm build (original : ng build) - rare usecase
BUILD_TYPE=${BUILD_TYPE:-}

# MANUAL: Determine which build method to call
if [ -n "$BUILD_TYPE" ]; then
  method="build_$BUILD_TYPE"
  if declare -f "$method" > /dev/null; then
    $method
  else
    echo "Invalid build type specified: $BUILD_TYPE"
  fi
else
  #  AUTO: Auto Generated build selector logic
  if [ -f "pom.xml" ]; then
    build_maven
  elif [ -f "package.json" ] && [ -f "angular.json" ]; then
    build_angular
  elif [ -f "package.json" ]; then
    build_node
  else
    echo "No recognizable auto build project type detected."
  fi
fi