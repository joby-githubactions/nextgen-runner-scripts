# Specify the PID file location
pid /tmp/nginx.pid;

worker_processes 1;
error_log /dev/stdout info;
error_log /dev/stderr;

events {
    worker_connections 1024;
}

http {
	#https://github.com/nginxinc/docker-nginx-unprivileged/blob/main/README.md
	client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Add more origins as needed
    map $http_origin $allowed_origin {
        default "";
        ~*^https?://localhost:(4200|4502|4503)$ $http_origin;  # Matches localhost with specified ports
        ~*\.cloud\.allianz$ $http_origin;                      # Matches any domain ending with "cloud.allianz"
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;

    sendfile on;
    #tcp_nopush on;
    keepalive_timeout 65;
    gzip on;
    gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

    #more_clear_headers Server;

    server {
        listen 8080;
        gzip on;
        gzip_proxied no-cache no-store private expired auth;
        gzip_min_length 1000;

        location / {
            root /usr/share/nginx/html;

            location /actuator/info {
                add_header Cache-Control 'must-revalidate';
                add_header Content-Type application/json;
                default_type application/json;
            }

            location /actuator/health {
                add_header Cache-Control 'must-revalidate';
                add_header Content-Type application/json;
                return 200 '{"name":"tc-fe", "status": "UP"}';
            }

            # TODO: Check the nginx CORS configuration for production. Unnecessary domains should be removed!
            location ~* \.(woff|woff2|eot|ttf)$ {
                # For fonts on CORS, the browser will not send credentials so we need to turn off basic auth for fonts
                auth_basic off;
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Credentials' "true";
            }

            location ~* \.(js|gz|json)$ {
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Credentials' "true";
                add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }

            try_files $uri.html $uri$args $uri$args/ /index.html;

            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Content-Length' '0';
                add_header 'Content-Type' 'text/plain';
                return 200;
            }
        }
    }
}
